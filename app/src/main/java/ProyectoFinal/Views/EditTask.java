/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ProyectoFinal.Views;

import ProyectoFinal.Api.ApiClient;
import ProyectoFinal.Api.Resources.Task;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


/**
 *
 * @author juanhernandez
 */
public class EditTask extends javax.swing.JFrame {
    private static JTable table;
    private static int selectedRow;
    String taskId;
    String taskTitle;
    String taskDescription;
    boolean taskStatus;
    /**
     * Creates new form AddTask
     */
    public EditTask(String id, String title, String description, String status) {
        this.taskId = id;
        this.taskTitle = title;
        this.taskDescription = description;
        this.taskStatus = "Completado".equals(status);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionField = new javax.swing.JTextArea();
        titleField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        statusCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Editar To-Do Manager");

        jLabel1.setText("Titulo:");

        jLabel2.setText("Descripción:");

        descriptionField.setColumns(20);
        descriptionField.setRows(5);
        descriptionField.setText(this.taskDescription);
        jScrollPane1.setViewportView(descriptionField);

        titleField.setText(this.taskTitle);

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel3.setText("Editar Tarea");

        jButton1.setBackground(new java.awt.Color(0, 0, 255));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Editar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancelar");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        removeButton.setBackground(new java.awt.Color(255, 0, 0));
        removeButton.setForeground(new java.awt.Color(255, 255, 255));
        removeButton.setText("Eliminar");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        statusCheckBox.setSelected(this.taskStatus);
        statusCheckBox.setText("Completado");
        statusCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(269, 269, 269)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(removeButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cancelButton)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(statusCheckBox)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                                        .addComponent(titleField)))))))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(statusCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(cancelButton)
                    .addComponent(removeButton))
                .addGap(47, 47, 47))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        EditTask.enableTable();
        EditTask.setTable(null);
        EditTask.setSelectedRow(0);
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void statusCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusCheckBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String title = this.titleField.getText();
        String description = this.descriptionField.getText();
        boolean status = this.statusCheckBox.isSelected();
        if (title.length() < 4 || description.length() < 4) return;
        Task updatedTask = new ApiClient().updateTask(Integer.parseInt(this.taskId), title, description, status);
        if (updatedTask != null) {
            table.setValueAt(updatedTask.getTitle(), selectedRow, 1);
            table.setValueAt(updatedTask.getDescription(), selectedRow, 2);
            table.setValueAt(updatedTask.isCompleted() ? "Completado" : "Por hacer", selectedRow, 3);
            EditTask.enableTable();
            EditTask.setTable(null);
            EditTask.setSelectedRow(0);
            this.dispose();
        };
    }//GEN-LAST:event_jButton1ActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
        int statusCode = new ApiClient().deleteTask(Integer.parseInt(this.taskId));
        if (statusCode == 200) {
            EditTask.enableTable();
            TableModel model = table.getModel();
            if (selectedRow >= 0) {
            // Crear una nueva matriz de datos sin la fila seleccionada
                DefaultTableModel newModel = new DefaultTableModel(){
                    @Override
                    public boolean isCellEditable(int row, int column) {
                    return false;
                }};
                
                newModel.addColumn("Id");
                newModel.addColumn("Titulo");
                newModel.addColumn("Descripción");
                newModel.addColumn("Estatus");
                int rowCount = model.getRowCount();
                
                for(int index = 0; index < rowCount; index++) {
                    if (index != selectedRow) {
                        Object[] rowData = new Object[4];
                        for (int col = 0; col < 4; col++) {
                            rowData[col] = model.getValueAt(index, col);
                        }
                        newModel.addRow(rowData);
                    }
                }
                
                // Establecer el nuevo modelo de tabla en la tabla
                table.setModel(newModel);
                table.repaint();
        }
                System.out.println("hola");
                //EditTask.setTable(null);
                //EditTask.setSelectedRow(0);
                this.dispose();
        }
    }//GEN-LAST:event_removeButtonActionPerformed
    public static void setTable(JTable currentTable) {
        table = currentTable;
    }
    public static void setSelectedRow(int row) {
        selectedRow = row;
    }
    public static void enableTable() {
        table.setEnabled(true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        String taskId = args[0];
        String taskTitle = args[1];
        String taskDescription = args[2];
        String taskStatus = args[3];
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditTask(taskId, taskTitle, taskDescription, taskStatus).setVisible(true);
            }
        });
    }  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextArea descriptionField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removeButton;
    private javax.swing.JCheckBox statusCheckBox;
    private javax.swing.JTextField titleField;
    // End of variables declaration//GEN-END:variables
}
